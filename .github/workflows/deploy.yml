name: ProApp Deployment

on:
  push:
    branches:
      - master

  jobs:
    frontend-build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '24'

        - name: Build Frontend
          working-directory: frontend
          run: |
            npm install
            npm run build

        - name: Upload Frontend-Build
          uses: actions/upload-artifact@v4
          with:
            name: frontend-build
            path: frontend/dist/*

    backend-build:
      runs-on: ubuntu-latest
      needs: frontend-build
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v3
        - name: Setup JDK
          uses: actions/setup-java@v3
          with:
            java-version: '21'
            distribution: 'temurin'
            cache: 'maven'
        - name: Download Frontend-Build
          uses: actions/download-artifact@v4
          with:
            name: 'frontend-build'
            path: 'backend/src/main/resources/static'
        - name: Build Backend mit Maven
          run: mvn -B package --file backend/pom.xml
        - name: Upload App.jar
          uses: actions/upload-artifact@v4
          with:
            name: 'app-jar'
            path: 'backend/target/app.jar'

    push-to-docker-hub:
      runs-on: ubuntu-latest
      needs: backend-build
      steps:
        - uses: actions/checkout@v3
        - name: Download Backend Artefakt
          uses: actions/download-artifact@v4
          with:
            name: app.jar
            path: backend/target

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: $
            password: $
        - name: Build and Push Backend Image
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: $  # z.B. "myuser/my-backend:latest"

    deploy-to-render:
      runs-on: ubuntu-latest
      needs: push-to-docker-hub
      steps:
        - name: Trigger Render Deployment
          run: |
            curl -X POST $ 
